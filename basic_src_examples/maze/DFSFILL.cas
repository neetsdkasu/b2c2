DFSFILL   START
                                   ; Allocate Memory
          LD        GR0,GR1
          LD        GR1,MEM
          PUSH      0,GR1
          LD        GR1,GR0
          PUSH      0,GR1
          XOR       GR0,GR0
          LAD       GR1,4
          CALL      ALLOC
          ST        GR0,MEM
          POP       GR1
                                   ; Argument maze
          LD        GR7,MEM
          LAD       GR7,0,GR7
          ST        GR1,0,GR7
          ST        GR2,1,GR7
                                   ; Argument pos
          LD        GR7,MEM
          LAD       GR7,2,GR7
          ST        GR3,0,GR7
                                   ; maze( pos ) = "."c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='.'
          ST        GR6,0,GR7
                                   ; x = (pos - 15)
          LD        GR7,MEM
          LD        GR7,2,GR7
          LAD       GR7,-15,GR7
          LD        GR6,MEM
          ST        GR7,3,GR6
                                   ; Select Case maze(x)
          LD        GR7,MEM
          LD        GR7,3,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          LD        GR3,MEM
          LD        GR3,1,GR3
          CALL      C11
          LD        GR7,GR0
          CPA       GR7,=' '
          JZE       J4
          CPA       GR7,='U'
          JZE       J5
          CPA       GR7,='L'
          JZE       J5
          CPA       GR7,='R'
          JZE       J5
          JUMP      J7
                                   ; Case " "c
J4        NOP
                                   ; maze( pos ) = "U"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='U'
          ST        GR6,0,GR7
                                   ; Call DFSFILL
                                   ;   ByRef maze As String [GR1,GR2]
                                   ;   maze = maze
                                   ;   ByVal pos As Integer [GR3]
                                   ;   pos = x
                                   ;   Set Arguments And Call DFSFILL
          LD        GR1,MEM
          LD        GR1,0,GR1
          LD        GR2,MEM
          LD        GR2,1,GR2
          LD        GR3,MEM
          LD        GR3,3,GR3
          CALL      DFSFILL
          JUMP      J7
                                   ; Case "U"c, "L"c, "R"c
J5        NOP
                                   ; maze( pos ) = "#"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='#'
          ST        GR6,0,GR7
                                   ; Exit Program
          JUMP      EXIT
                                   ; End Select
J7        NOP
                                   ; x = (pos + 1)
          LD        GR7,MEM
          LD        GR7,2,GR7
          LAD       GR7,1,GR7
          LD        GR6,MEM
          ST        GR7,3,GR6
                                   ; Select Case maze(x)
          LD        GR7,MEM
          LD        GR7,3,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          LD        GR3,MEM
          LD        GR3,1,GR3
          CALL      C11
          LD        GR7,GR0
          CPA       GR7,=' '
          JZE       J8
          CPA       GR7,='U'
          JZE       J9
          CPA       GR7,='R'
          JZE       J9
          CPA       GR7,='D'
          JZE       J9
          JUMP      J10
                                   ; Case " "c
J8        NOP
                                   ; maze( pos ) = "R"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='R'
          ST        GR6,0,GR7
                                   ; Call DFSFILL
                                   ;   ByRef maze As String [GR1,GR2]
                                   ;   maze = maze
                                   ;   ByVal pos As Integer [GR3]
                                   ;   pos = x
                                   ;   Set Arguments And Call DFSFILL
          LD        GR1,MEM
          LD        GR1,0,GR1
          LD        GR2,MEM
          LD        GR2,1,GR2
          LD        GR3,MEM
          LD        GR3,3,GR3
          CALL      DFSFILL
          JUMP      J10
                                   ; Case "U"c, "R"c, "D"c
J9        NOP
                                   ; maze( pos ) = "#"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='#'
          ST        GR6,0,GR7
                                   ; Exit Program
          JUMP      EXIT
                                   ; End Select
J10       NOP
                                   ; x = (pos + 15)
          LD        GR7,MEM
          LD        GR7,2,GR7
          LAD       GR7,15,GR7
          LD        GR6,MEM
          ST        GR7,3,GR6
                                   ; Select Case maze(x)
          LD        GR7,MEM
          LD        GR7,3,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          LD        GR3,MEM
          LD        GR3,1,GR3
          CALL      C11
          LD        GR7,GR0
          CPA       GR7,=' '
          JZE       J11
          CPA       GR7,='R'
          JZE       J12
          CPA       GR7,='L'
          JZE       J12
          CPA       GR7,='D'
          JZE       J12
          JUMP      J13
                                   ; Case " "c
J11       NOP
                                   ; maze( pos ) = "D"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='D'
          ST        GR6,0,GR7
                                   ; Call DFSFILL
                                   ;   ByRef maze As String [GR1,GR2]
                                   ;   maze = maze
                                   ;   ByVal pos As Integer [GR3]
                                   ;   pos = x
                                   ;   Set Arguments And Call DFSFILL
          LD        GR1,MEM
          LD        GR1,0,GR1
          LD        GR2,MEM
          LD        GR2,1,GR2
          LD        GR3,MEM
          LD        GR3,3,GR3
          CALL      DFSFILL
          JUMP      J13
                                   ; Case "R"c, "L"c, "D"c
J12       NOP
                                   ; maze( pos ) = "#"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='#'
          ST        GR6,0,GR7
                                   ; Exit Program
          JUMP      EXIT
                                   ; End Select
J13       NOP
                                   ; x = (pos - 1)
          LD        GR7,MEM
          LD        GR7,2,GR7
          LAD       GR7,-1,GR7
          LD        GR6,MEM
          ST        GR7,3,GR6
                                   ; Select Case maze(x)
          LD        GR7,MEM
          LD        GR7,3,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          LD        GR3,MEM
          LD        GR3,1,GR3
          CALL      C11
          LD        GR7,GR0
          CPA       GR7,=' '
          JZE       J14
          CPA       GR7,='L'
          JZE       J15
          CPA       GR7,='U'
          JZE       J15
          CPA       GR7,='D'
          JZE       J15
          JUMP      J16
                                   ; Case " "c
J14       NOP
                                   ; maze( pos ) = "L"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='L'
          ST        GR6,0,GR7
                                   ; Call DFSFILL
                                   ;   ByRef maze As String [GR1,GR2]
                                   ;   maze = maze
                                   ;   ByVal pos As Integer [GR3]
                                   ;   pos = x
                                   ;   Set Arguments And Call DFSFILL
          LD        GR1,MEM
          LD        GR1,0,GR1
          LD        GR2,MEM
          LD        GR2,1,GR2
          LD        GR3,MEM
          LD        GR3,3,GR3
          CALL      DFSFILL
          JUMP      J16
                                   ; Case "L"c, "U"c, "D"c
J15       NOP
                                   ; maze( pos ) = "#"c
          LD        GR7,MEM
          LD        GR7,2,GR7
          LD        GR1,GR7
          LD        GR2,MEM
          LD        GR2,0,GR2
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,MEM
          LD        GR7,1,GR7
          ADDL      GR7,GR0
          LD        GR6,='#'
          ST        GR6,0,GR7
                                   ; Exit Program
          JUMP      EXIT
                                   ; End Select
J16       NOP
EXIT      NOP
                                   ; Release Memory
          LAD       GR0,1
          LD        GR1,MEM
          CALL      ALLOC
          POP       GR1
          ST        GR1,MEM
          RET
MEM       DS        1
                                   ; UtilAllocator
ALLOC     AND       GR0,GR0
          JNZ       J19
          LAD       GR0,V3
          ADDL      GR0,V1
          CPL       GR0,V2
          JZE       J18
J17       ST        GR1,V1
          LAD       GR0,V3
          ADDL      GR1,GR0
          ST        GR1,V2
          RET
J18       ADDL      GR0,GR1
          CPL       GR0,V4
          JPL       J17
          ST        GR0,V2
          SUBL      GR0,GR1
          ADDL      GR1,V1
          ST        GR1,V1
          RET
J19       ST        GR1,V2
          LAD       GR0,V3
          SUBL      GR1,GR0
          ST        GR1,V1
          RET
V1        DS        1
V2        DS        1
V3        DS        2000
V4        DC        V4
                                   ; UtilLoadElement
C11       AND       GR2,GR2
          JNZ       J6
          XOR       GR0,GR0
          RET
J6        CALL      C13
          PUSH      0,GR3
          ADDL      GR3,GR0
          LD        GR0,0,GR3
          POP       GR3
          RET
                                   ; UtilSafeIndex
C13       AND       GR2,GR2
          JNZ       J1
          XOR       GR0,GR0
          RET
J1        LD        GR0,GR1
          JPL       J2
          XOR       GR0,GR0
          RET
J2        CPL       GR0,GR2
          JMI       J3
          LAD       GR0,-1
          ADDL      GR0,GR2
J3        RET
          END
