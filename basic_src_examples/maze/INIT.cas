INIT      START
          RPUSH
                                   ; Argument maze
          ST        GR1,ARG1
          ST        GR2,ARG2
                                   ; Init Variables
          LAD       GR1,I1
          XOR       GR2,GR2
          LAD       GR3,2
          CALL      C10
                                   ; Print "Seed? (1 - 999)"
          OUT       LB1,LL1
                                   ; Input x
          IN        TB1,TL1
          XOR       GR0,GR0
          ST        GR0,EOF
          LAD       GR1,TB1
          LD        GR2,TL1
          JPL       J4
          JZE       J4
          ST        GR2,EOF
          XOR       GR2,GR2
J4        CALL      C0
          ST        GR0,I2
                                   ; Call RAND
                                   ;   ByVal init As Boolean [GR1]
                                   ;   init = True
          LAD       GR7,#FFFF
          ST        GR7,T1
                                   ;   ByRef value As Integer [GR2]
                                   ;   value = Max(101, Min(1099, (x + 100)))
          LAD       GR7,101
          LAD       GR6,1099
          LD        GR5,I2
          LAD       GR5,100,GR5
          CPA       GR6,GR5
          JMI       J5
          LD        GR6,GR5
J5        NOP
          CPA       GR7,GR6
          JPL       J6
          LD        GR7,GR6
J6        NOP
          ST        GR7,T2
                                   ;   Set Arguments And Call RAND
          LD        GR1,T1
          LAD       GR2,T2
          CALL      RAND
                                   ; maze = Space(225)
          LAD       GR7,225
          LD        GR3,GR7
          LAD       GR1,TB1
          LAD       GR2,TL1
          CALL      C3
          LD        GR1,ARG2
          LD        GR2,ARG1
          LAD       GR3,TB1
          LD        GR4,TL1
          CALL      C7
                                   ; Mid( maze, 0, 15 ) = String(15, "#"c)
          LAD       GR7,15
          LD        GR6,='#'
          LD        GR3,GR6
          LD        GR1,GR7
          LAD       GR2,257
          CALL      C13
          ST        GR0,TL1
          LAD       GR1,TB1
          LD        GR2,GR3
          LD        GR3,GR0
          CALL      C10
          XOR       GR7,GR7
          LAD       GR6,15
          LD        GR1,GR7
          LD        GR5,ARG2
          LD        GR2,ARG1
          LD        GR2,0,GR2
          LAD       GR3,TB1
          LD        GR4,TL1
          CALL      C8
                                   ; Mid( maze, 210, 15 ) = String(15, "#"c)
          LAD       GR7,15
          LD        GR6,='#'
          LD        GR3,GR6
          LD        GR1,GR7
          LAD       GR2,257
          CALL      C13
          ST        GR0,TL1
          LAD       GR1,TB1
          LD        GR2,GR3
          LD        GR3,GR0
          CALL      C10
          LAD       GR7,210
          LAD       GR6,15
          LD        GR1,GR7
          LD        GR5,ARG2
          LD        GR2,ARG1
          LD        GR2,0,GR2
          LAD       GR3,TB1
          LD        GR4,TL1
          CALL      C8
                                   ; For i = 15 To 210 Step 15
          LAD       GR7,15
          ST        GR7,I1
J19       NOP
          LD        GR1,I1
          CPA       GR1,=210
          JPL       J21
                                   ; maze( i ) = "#"c
          LD        GR7,I1
          LD        GR1,GR7
          LD        GR2,ARG1
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,ARG2
          ADDL      GR7,GR0
          LD        GR6,='#'
          ST        GR6,0,GR7
                                   ; maze( (i + 14) ) = "#"c
          LD        GR7,I1
          LAD       GR7,14,GR7
          LD        GR1,GR7
          LD        GR2,ARG1
          LD        GR2,0,GR2
          CALL      C13
          LD        GR7,ARG2
          ADDL      GR7,GR0
          LD        GR6,='#'
          ST        GR6,0,GR7
                                   ; Next i
J20       NOP
          LAD       GR1,I1
          LD        GR2,0,GR1
          LAD       GR2,15,GR2
          ST        GR2,0,GR1
          JUMP      J19
J21       NOP
EXIT      NOP
          RPOP
          RET
                                   ; ByRef maze As String [GR1,GR2]
ARG1      DS        1
ARG2      DS        1
                                   ; Dim i As Integer
I1        DS        1
                                   ; Dim x As Integer
I2        DS        1
EOF       DS        1
T1        DS        1
T2        DS        1
TL1       DS        1
TB1       DS        256
LL1       DC        15
LB1       DC        'Seed? (1 - 999)'
                                   ; FuncCInt
C0        PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          PUSH      0,GR5
          ADDL      GR2,GR1
          XOR       GR0,GR0
          XOR       GR4,GR4
          CPL       GR1,GR2
          JZE       J1
          LD        GR3,0,GR1
          CPL       GR3,='+'
          JNZ       J3
          LAD       GR1,1,GR1
          JUMP      J2
J3        CPL       GR3,='-'
          JNZ       J2
          LAD       GR4,-1
          LAD       GR1,1,GR1
J2        CPL       GR1,GR2
          JZE       J1
          LD        GR3,0,GR1
          SUBL      GR3,='0'
          JMI       J1
          CPL       GR3,=9
          JPL       J1
          LD        GR5,GR0
          SLL       GR0,3
          ADDL      GR0,GR5
          ADDL      GR0,GR5
          ADDL      GR0,GR3
          LAD       GR1,1,GR1
          JUMP      J2
J1        XOR       GR0,GR4
          SUBL      GR0,GR4
          POP       GR5
          POP       GR4
          POP       GR3
          POP       GR2
          POP       GR1
          RET
                                   ; FuncSpace
C3        PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          XOR       GR1,GR3
          XOR       GR3,GR1
          XOR       GR1,GR3
          LAD       GR2,257
          CALL      C13
          LD        GR1,GR3
          LD        GR3,GR0
          LD        GR2,=' '
          CALL      C10
          LD        GR0,GR3
          POP       GR3
          POP       GR2
          POP       GR1
          ST        GR0,0,GR2
          RET
                                   ; UtilCopyStr
C7        PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          ST        GR4,0,GR2
          AND       GR4,GR4
          JZE       J13
J12       LD        GR2,0,GR3
          ST        GR2,0,GR1
          LAD       GR3,1,GR3
          LAD       GR1,1,GR1
          SUBL      GR4,=1
          JPL       J12
J13       POP       GR4
          POP       GR3
          POP       GR2
          POP       GR1
          RET
                                   ; UtilCopyToOffsetStr
C8        PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          PUSH      0,GR5
          PUSH      0,GR6
          CALL      C13
          LD        GR1,GR6
          LD        GR6,GR0
          CPL       GR1,GR2
          JMI       J14
          LD        GR1,GR2
J14       ADDL      GR1,GR6
          LD        GR0,GR1
          CPL       GR0,GR2
          JMI       J15
          LD        GR0,GR2
J15       SUBL      GR0,GR6
          CPL       GR0,GR4
          JMI       J16
          LD        GR0,GR4
J16       ADDL      GR5,GR6
          LD        GR6,GR5
          ADDL      GR5,GR0
          ADDL      GR3,GR0
J17       CPL       GR5,GR6
          JZE       J18
          LAD       GR3,-1,GR3
          LAD       GR5,-1,GR5
          LD        GR1,0,GR3
          ST        GR1,0,GR5
          JUMP      J17
J18       POP       GR6
          POP       GR5
          POP       GR4
          POP       GR3
          POP       GR2
          POP       GR1
          RET
                                   ; UtilFill
C10       PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          ADDL      GR3,GR1
J10       CPL       GR1,GR3
          JZE       J11
          ST        GR2,0,GR1
          LAD       GR1,1,GR1
          JUMP      J10
J11       POP       GR3
          POP       GR2
          POP       GR1
          RET
                                   ; UtilSafeIndex
C13       AND       GR2,GR2
          JNZ       J7
          XOR       GR0,GR0
          RET
J7        LD        GR0,GR1
          JPL       J8
          XOR       GR0,GR0
          RET
J8        CPL       GR0,GR2
          JMI       J9
          LAD       GR0,-1
          ADDL      GR0,GR2
J9        RET
          END
