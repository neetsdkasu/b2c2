MAIN      START
          RPUSH
                                   ; Init Variables
          LAD       GR1,B12
          XOR       GR2,GR2
          LAD       GR3,1034
          CALL      C10
                                   ; Print "Text1?"
          OUT       LB1,LL1
                                   ; Input text1
          IN        SB6,SL6
          XOR       GR0,GR0
          ST        GR0,EOF
          LD        GR0,SL6
          JPL       J1
          JZE       J1
          ST        GR0,EOF
          XOR       GR0,GR0
          ST        GR0,SL6
J1        NOP
                                   ; Print "Text2?"
          OUT       LB2,LL2
                                   ; Input text2
          IN        SB7,SL7
          XOR       GR0,GR0
          ST        GR0,EOF
          LD        GR0,SL7
          JPL       J2
          JZE       J2
          ST        GR0,EOF
          XOR       GR0,GR0
          ST        GR0,SL7
J2        NOP
                                   ; If ((Len(text1) = 0) Or (Len(text2) = 0)) Then
          LD        GR7,SL6
          XOR       GR6,GR6
          SUBA      GR7,GR6
          JZE       J4
          LAD       GR7,#FFFF
J4        XOR       GR7,=#FFFF
          LD        GR6,SL7
          XOR       GR5,GR5
          SUBA      GR6,GR5
          JZE       J5
          LAD       GR6,#FFFF
J5        XOR       GR6,=#FFFF
          OR        GR7,GR6
          AND       GR7,GR7
          JZE       J3
                                   ; distance = (Len(text1) + Len(text2))
          LD        GR7,SL6
          LD        GR6,SL7
          ADDA      GR7,GR6
          ST        GR7,I5
                                   ; Print ("Edit Distance: " & CStr(distance))
          LD        GR7,I5
          LD        GR3,GR7
          LAD       GR1,TB1
          LAD       GR2,TL1
          CALL      C2
          LAD       GR1,TB2
          LAD       GR2,TL2
          LAD       GR3,='Edit Distance: '
          LAD       GR4,15
          CALL      C7
          LAD       GR1,TB2
          LAD       GR2,TL2
          LAD       GR3,TB1
          LD        GR4,TL1
          CALL      C5
          OUT       TB2,TL2
                                   ; Exit Program
          JUMP      EXIT
                                   ; End If
J3        NOP
                                   ; dp10 = 0
          XOR       GR7,GR7
          ST        GR7,I10
                                   ; For i = 0 To (Len(text1) - 1) Step 1
          LD        GR7,SL6
          LAD       GR7,-1,GR7
          ST        GR7,T1
          XOR       GR7,GR7
          ST        GR7,I1
J30       NOP
          LD        GR1,I1
          CPA       GR1,T1
          JPL       J32
                                   ; dp1( i ) = (i + 1)
          LD        GR7,I1
          LD        GR1,GR7
          LAD       GR2,256
          CALL      C13
          LAD       GR7,IA8
          ADDL      GR7,GR0
          LD        GR6,I1
          LAD       GR6,1,GR6
          ST        GR6,0,GR7
                                   ; Next i
J31       NOP
          LAD       GR1,I1
          LD        GR2,0,GR1
          LAD       GR2,1,GR2
          ST        GR2,0,GR1
          JUMP      J30
J32       NOP
                                   ; turn = True
          LAD       GR7,#FFFF
          ST        GR7,B12
                                   ; For i = 0 To (Len(text2) - 1) Step 1
          LD        GR7,SL7
          LAD       GR7,-1,GR7
          ST        GR7,T1
          XOR       GR7,GR7
          ST        GR7,I1
J36       NOP
          LD        GR1,I1
          CPA       GR1,T1
          JPL       J38
                                   ; ch = text2(i)
          LD        GR7,I1
          LD        GR1,GR7
          LD        GR2,SL7
          LAD       GR3,SB7
          CALL      C11
          LD        GR7,GR0
          ST        GR7,I3
                                   ; If turn Then
          LD        GR7,B12
          AND       GR7,GR7
          JZE       J41
                                   ; dp20 = (i + 1)
          LD        GR7,I1
          LAD       GR7,1,GR7
          ST        GR7,I11
                                   ; If (text1(0) = ch) Then
          XOR       GR7,GR7
          LD        GR1,GR7
          LD        GR2,SL6
          LAD       GR3,SB6
          CALL      C11
          LD        GR7,GR0
          LD        GR6,I3
          SUBA      GR7,GR6
          JZE       J44
          LAD       GR7,#FFFF
J44       XOR       GR7,=#FFFF
          AND       GR7,GR7
          JZE       J43
                                   ; cost = 0
          XOR       GR7,GR7
          ST        GR7,I4
          JUMP      J42
                                   ; Else
J43       NOP
                                   ; cost = 1
          LAD       GR7,1
          ST        GR7,I4
                                   ; End If
J42       NOP
                                   ; dp2( 0 ) = Min((dp20 + 1), Min((dp10 + cost), (dp1(0) + 1)))
          LD        GR7,I11
          LAD       GR7,1,GR7
          LD        GR6,I10
          LD        GR5,I4
          ADDA      GR6,GR5
          LD        GR5,IA8
          LAD       GR5,1,GR5
          CPA       GR6,GR5
          JMI       J45
          LD        GR6,GR5
J45       NOP
          CPA       GR7,GR6
          JMI       J46
          LD        GR7,GR6
J46       NOP
          LAD       GR6,IA9
          ST        GR7,0,GR6
                                   ; For k = 1 To (Len(text1) - 1) Step 1
          LD        GR7,SL6
          LAD       GR7,-1,GR7
          ST        GR7,T2
          LAD       GR7,1
          ST        GR7,I2
J47       NOP
          LD        GR1,I2
          CPA       GR1,T2
          JPL       J49
                                   ; If (text1(k) = ch) Then
          LD        GR7,I2
          LD        GR1,GR7
          LD        GR2,SL6
          LAD       GR3,SB6
          CALL      C11
          LD        GR7,GR0
          LD        GR6,I3
          SUBA      GR7,GR6
          JZE       J52
          LAD       GR7,#FFFF
J52       XOR       GR7,=#FFFF
          AND       GR7,GR7
          JZE       J51
                                   ; cost = 0
          XOR       GR7,GR7
          ST        GR7,I4
          JUMP      J50
                                   ; Else
J51       NOP
                                   ; cost = 1
          LAD       GR7,1
          ST        GR7,I4
                                   ; End If
J50       NOP
                                   ; dp2( k ) = Min((dp2(k - 1) + 1), Min((dp1(k - 1) + cost), (dp1(k) + 1)))
          LD        GR7,I2
          LD        GR1,GR7
          LAD       GR2,256
          CALL      C13
          LAD       GR7,IA9
          ADDL      GR7,GR0
          LD        GR6,I2
          LAD       GR6,-1,GR6
          LD        GR1,GR6
          LAD       GR2,256
          CALL      C13
          LAD       GR6,IA9
          ADDL      GR6,GR0
          LD        GR6,0,GR6
          LAD       GR6,1,GR6
          LD        GR5,I2
          LAD       GR5,-1,GR5
          LD        GR1,GR5
          LAD       GR2,256
          CALL      C13
          LAD       GR5,IA8
          ADDL      GR5,GR0
          LD        GR5,0,GR5
          LD        GR4,I4
          ADDA      GR5,GR4
          LD        GR4,I2
          LD        GR1,GR4
          LAD       GR2,256
          CALL      C13
          LAD       GR4,IA8
          ADDL      GR4,GR0
          LD        GR4,0,GR4
          LAD       GR4,1,GR4
          CPA       GR5,GR4
          JMI       J53
          LD        GR5,GR4
J53       NOP
          CPA       GR6,GR5
          JMI       J54
          LD        GR6,GR5
J54       NOP
          ST        GR6,0,GR7
                                   ; Next k
J48       NOP
          LAD       GR1,I2
          LD        GR2,0,GR1
          LAD       GR2,1,GR2
          ST        GR2,0,GR1
          JUMP      J47
J49       NOP
          JUMP      J40
                                   ; Else
J41       NOP
                                   ; dp10 = (i + 1)
          LD        GR7,I1
          LAD       GR7,1,GR7
          ST        GR7,I10
                                   ; If (text1(0) = ch) Then
          XOR       GR7,GR7
          LD        GR1,GR7
          LD        GR2,SL6
          LAD       GR3,SB6
          CALL      C11
          LD        GR7,GR0
          LD        GR6,I3
          SUBA      GR7,GR6
          JZE       J57
          LAD       GR7,#FFFF
J57       XOR       GR7,=#FFFF
          AND       GR7,GR7
          JZE       J56
                                   ; cost = 0
          XOR       GR7,GR7
          ST        GR7,I4
          JUMP      J55
                                   ; Else
J56       NOP
                                   ; cost = 1
          LAD       GR7,1
          ST        GR7,I4
                                   ; End If
J55       NOP
                                   ; dp1( 0 ) = Min((dp10 + 1), Min((dp20 + cost), (dp2(0) + 1)))
          LD        GR7,I10
          LAD       GR7,1,GR7
          LD        GR6,I11
          LD        GR5,I4
          ADDA      GR6,GR5
          LD        GR5,IA9
          LAD       GR5,1,GR5
          CPA       GR6,GR5
          JMI       J58
          LD        GR6,GR5
J58       NOP
          CPA       GR7,GR6
          JMI       J59
          LD        GR7,GR6
J59       NOP
          LAD       GR6,IA8
          ST        GR7,0,GR6
                                   ; For k = 1 To (Len(text1) - 1) Step 1
          LD        GR7,SL6
          LAD       GR7,-1,GR7
          ST        GR7,T2
          LAD       GR7,1
          ST        GR7,I2
J60       NOP
          LD        GR1,I2
          CPA       GR1,T2
          JPL       J62
                                   ; If (text1(k) = ch) Then
          LD        GR7,I2
          LD        GR1,GR7
          LD        GR2,SL6
          LAD       GR3,SB6
          CALL      C11
          LD        GR7,GR0
          LD        GR6,I3
          SUBA      GR7,GR6
          JZE       J65
          LAD       GR7,#FFFF
J65       XOR       GR7,=#FFFF
          AND       GR7,GR7
          JZE       J64
                                   ; cost = 0
          XOR       GR7,GR7
          ST        GR7,I4
          JUMP      J63
                                   ; Else
J64       NOP
                                   ; cost = 1
          LAD       GR7,1
          ST        GR7,I4
                                   ; End If
J63       NOP
                                   ; dp1( k ) = Min((dp1(k - 1) + 1), Min((dp2(k - 1) + cost), (dp2(k) + 1)))
          LD        GR7,I2
          LD        GR1,GR7
          LAD       GR2,256
          CALL      C13
          LAD       GR7,IA8
          ADDL      GR7,GR0
          LD        GR6,I2
          LAD       GR6,-1,GR6
          LD        GR1,GR6
          LAD       GR2,256
          CALL      C13
          LAD       GR6,IA8
          ADDL      GR6,GR0
          LD        GR6,0,GR6
          LAD       GR6,1,GR6
          LD        GR5,I2
          LAD       GR5,-1,GR5
          LD        GR1,GR5
          LAD       GR2,256
          CALL      C13
          LAD       GR5,IA9
          ADDL      GR5,GR0
          LD        GR5,0,GR5
          LD        GR4,I4
          ADDA      GR5,GR4
          LD        GR4,I2
          LD        GR1,GR4
          LAD       GR2,256
          CALL      C13
          LAD       GR4,IA9
          ADDL      GR4,GR0
          LD        GR4,0,GR4
          LAD       GR4,1,GR4
          CPA       GR5,GR4
          JMI       J66
          LD        GR5,GR4
J66       NOP
          CPA       GR6,GR5
          JMI       J67
          LD        GR6,GR5
J67       NOP
          ST        GR6,0,GR7
                                   ; Next k
J61       NOP
          LAD       GR1,I2
          LD        GR2,0,GR1
          LAD       GR2,1,GR2
          ST        GR2,0,GR1
          JUMP      J60
J62       NOP
                                   ; End If
J40       NOP
                                   ; turn = Not turn
          LD        GR7,B12
          XOR       GR7,=#FFFF
          ST        GR7,B12
                                   ; Next i
J37       NOP
          LAD       GR1,I1
          LD        GR2,0,GR1
          LAD       GR2,1,GR2
          ST        GR2,0,GR1
          JUMP      J36
J38       NOP
                                   ; If turn Then
          LD        GR7,B12
          AND       GR7,GR7
          JZE       J69
                                   ; distance = dp1(Len(text1) - 1)
          LD        GR7,SL6
          LAD       GR7,-1,GR7
          LD        GR1,GR7
          LAD       GR2,256
          CALL      C13
          LAD       GR7,IA8
          ADDL      GR7,GR0
          LD        GR7,0,GR7
          ST        GR7,I5
          JUMP      J68
                                   ; Else
J69       NOP
                                   ; distance = dp2(Len(text1) - 1)
          LD        GR7,SL6
          LAD       GR7,-1,GR7
          LD        GR1,GR7
          LAD       GR2,256
          CALL      C13
          LAD       GR7,IA9
          ADDL      GR7,GR0
          LD        GR7,0,GR7
          ST        GR7,I5
                                   ; End If
J68       NOP
                                   ; Print ("Edit Distance: " & CStr(distance))
          LD        GR7,I5
          LD        GR3,GR7
          LAD       GR1,TB2
          LAD       GR2,TL2
          CALL      C2
          LAD       GR1,TB1
          LAD       GR2,TL1
          LAD       GR3,='Edit Distance: '
          LAD       GR4,15
          CALL      C7
          LAD       GR1,TB1
          LAD       GR2,TL1
          LAD       GR3,TB2
          LD        GR4,TL2
          CALL      C5
          OUT       TB1,TL1
EXIT      NOP
          RPOP
          RET
                                   ; Dim turn As Boolean
B12       DS        1
                                   ; Dim i As Integer
I1        DS        1
                                   ; Dim dp10 As Integer
I10       DS        1
                                   ; Dim dp20 As Integer
I11       DS        1
                                   ; Dim k As Integer
I2        DS        1
                                   ; Dim ch As Integer
I3        DS        1
                                   ; Dim cost As Integer
I4        DS        1
                                   ; Dim distance As Integer
I5        DS        1
                                   ; Dim text1 As String
SL6       DS        1
SB6       DS        256
                                   ; Dim text2 As String
SL7       DS        1
SB7       DS        256
                                   ; Dim dp1(255) As Integer
IA8       DS        256
                                   ; Dim dp2(255) As Integer
IA9       DS        256
EOF       DS        1
T1        DS        1
T2        DS        1
TL1       DS        1
TB1       DS        256
TL2       DS        1
TB2       DS        256
LL1       DC        6
LB1       DC        'Text1?'
LL2       DC        6
LB2       DC        'Text2?'
                                   ; FuncCStrArgInt
C2        CPL       GR3,=#8000
          JNZ       J6
          PUSH      0,GR3
          PUSH      0,GR4
          LAD       GR3,='-32768'
          LAD       GR4,6
          CALL      C7
          POP       GR4
          POP       GR3
          RET
J6        AND       GR3,GR3
          JNZ       J7
          LAD       GR3,1
          ST        GR3,0,GR2
          LD        GR3,='0'
          ST        GR3,0,GR1
          XOR       GR3,GR3
          RET
J7        PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          PUSH      0,GR5
          JPL       J8
          LD        GR4,='-'
          ST        GR4,0,GR1
          LAD       GR1,1,GR1
          XOR       GR3,=#FFFF
          LAD       GR3,1,GR3
J8        LAD       GR4,V1
          LD        GR5,GR1
          LD        GR2,GR3
          LAD       GR3,10
J9        CALL      C9
          ADDL      GR1,='0'
          ST        GR1,0,GR4
          LAD       GR4,1,GR4
          LD        GR2,GR0
          JPL       J9
          LAD       GR2,V1
          LAD       GR4,-1,GR4
J10       LD        GR1,0,GR4
          ST        GR1,0,GR5
          LAD       GR5,1,GR5
          LAD       GR4,-1,GR4
          CPL       GR4,GR2
          JPL       J10
          JZE       J10
          LD        GR0,GR5
          POP       GR5
          POP       GR4
          POP       GR3
          POP       GR2
          POP       GR1
          SUBL      GR0,GR1
          ST        GR0,0,GR2
          RET
V1        DS        6
                                   ; UtilConcatStr
C5        PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          LD        GR0,0,GR2
          LD        GR2,GR1
          ADDL      GR1,GR0
          LAD       GR2,256,GR2
          ADDL      GR4,GR3
J28       CPL       GR1,GR2
          JZE       J29
          CPL       GR3,GR4
          JZE       J29
          LD        GR0,0,GR3
          ST        GR0,0,GR1
          LAD       GR1,1,GR1
          LAD       GR3,1,GR3
          JUMP      J28
J29       LD        GR0,GR1
          POP       GR4
          POP       GR3
          POP       GR2
          POP       GR1
          SUBL      GR0,GR1
          ST        GR0,0,GR2
          RET
                                   ; UtilCopyStr
C7        PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          ST        GR4,0,GR2
          AND       GR4,GR4
          JZE       J12
J11       LD        GR2,0,GR3
          ST        GR2,0,GR1
          LAD       GR3,1,GR3
          LAD       GR1,1,GR1
          SUBL      GR4,=1
          JPL       J11
J12       POP       GR4
          POP       GR3
          POP       GR2
          POP       GR1
          RET
                                   ; UtilDivMod
C9        AND       GR3,GR3
          JNZ       J15
          XOR       GR0,GR0
          LAD       GR1,-1
          RET
J15       PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          PUSH      0,GR5
          LD        GR4,GR2
          LD        GR5,GR2
          JPL       J13
          XOR       GR5,GR5
          SUBA      GR5,GR2
J13       LD        GR1,GR3
          JPL       J14
          XOR       GR1,GR1
          SUBA      GR1,GR3
J14       LAD       GR0,1
J16       ADDL      GR1,GR1
          JOV       J17
          ADDL      GR0,GR0
          JUMP      J16
J17       SRL       GR1,1
          LAD       GR1,#8000,GR1
          XOR       GR2,GR2
J18       CPL       GR5,GR1
          JMI       J19
          SUBL      GR5,GR1
          ADDL      GR2,GR0
J19       SRL       GR0,1
          JZE       J20
          SRL       GR1,1
          JUMP      J18
J20       LD        GR5,GR4
          XOR       GR5,GR3
          SRA       GR5,15
          XOR       GR2,GR5
          SUBA      GR2,GR5
          CALL      C12
          LD        GR1,GR4
          SUBA      GR1,GR0
          LD        GR0,GR2
          POP       GR5
          POP       GR4
          POP       GR3
          POP       GR2
          RET
                                   ; UtilFill
C10       PUSH      0,GR1
          PUSH      0,GR2
          PUSH      0,GR3
          ADDL      GR3,GR1
J70       CPL       GR1,GR3
          JZE       J71
          ST        GR2,0,GR1
          LAD       GR1,1,GR1
          JUMP      J70
J71       POP       GR3
          POP       GR2
          POP       GR1
          RET
                                   ; UtilLoadElement
C11       AND       GR2,GR2
          JNZ       J39
          XOR       GR0,GR0
          RET
J39       CALL      C13
          PUSH      0,GR3
          ADDL      GR3,GR0
          LD        GR0,0,GR3
          POP       GR3
          RET
                                   ; UtilMul
C12       PUSH      0,GR2
          PUSH      0,GR3
          PUSH      0,GR4
          PUSH      0,GR5
          XOR       GR0,GR0
          XOR       GR1,GR1
          LD        GR4,GR2
          LD        GR5,GR3
J21       SRL       GR2,1
          JOV       J22
          JNZ       J24
          JUMP      J25
J22       ADDL      GR0,GR3
          JOV       J23
          JUMP      J24
J23       LAD       GR1,1,GR1
J24       SLL       GR3,1
          JUMP      J21
J25       SRL       GR5,1
          SLL       GR4,1
          JOV       J26
          JNZ       J25
          JUMP      J27
J26       ADDL      GR1,GR5
          JUMP      J25
J27       POP       GR5
          POP       GR4
          POP       GR3
          POP       GR2
          RET
                                   ; UtilSafeIndex
C13       AND       GR2,GR2
          JNZ       J33
          XOR       GR0,GR0
          RET
J33       LD        GR0,GR1
          JPL       J34
          XOR       GR0,GR0
          RET
J34       CPL       GR0,GR2
          JMI       J35
          LAD       GR0,-1
          ADDL      GR0,GR2
J35       RET
          END
