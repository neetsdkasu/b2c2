エミュレータメモ

外部プログラムの読み込み
-srcのディレクトリのファイルを基本的に対象とする
不足のラベル(外部プログラムのエントリー名)を表示して
ロードするファイル名を指定させる、空欄ならオート読み込み
オート読み込みは
-srcにbasを指定なら、まずbasから探し、次にラベル名なcasを探し、最後に他のcasを探す
-srcにbasを指定なら、まずラベル名なcasを探し、次に他のcasを探し、最後にbasを探す
basのファイル名はラベル名との関係は考慮しないがcasは考慮する
いあ、bas指定でもcasから探すでよいかもしれない

ステップ実行、組み込みサブルーチンや外部プログラムの中身も含めてステップ実行するか否かを選べるといいかも
デフォは組み込みサブルーチンも外部プログラムも追わない設定がいいかも

ステップ実行できるようにする
各種レジスタの中身を表示　(16進表記と10進表記の併記) #0101 257
プログラムカウンタやスタックポインタも当然、表示

ステップ実行では実行したコードを表示するようにする
つまり、CASL2のコードとメモリ位置の対応も必要
コスト的にCASL2の１行ごとに対応するメモリ位置を保持して、プログラムカウンタからバイナリサーチしてもよいかも

ステップ実行ではその時点で最後に読み込んだコメント行を表示するようにする
CALL命令で飛ぶ場合は表示コメントもスタックに積む感じで処理していく
コメント表示だけじゃなくCALLで飛んだ現在ラベルも表示してたほうがいいか？

ステップごとに、操作コマンドでメモリ情報を参照できるようにする

操作コマンドに、コールスタックやレジスタやメモリの中身書き換えコマンドとか必要？（デバッグ用途なら欲しいか？
操作コマンドに、ラベルへのジャンプコマンドとか必要？（デバッグ用途なら欲しいか？でもコールスタック壊れる
操作コマンドに、RETまでskipってあったほうがいいか？（サブルーチンに関心がない場合はね・・・
操作コマンドに、ブレークポイントの設置コマンドとか必要？（デバッグ用途なら欲しいか？
ファイル名一覧や変数名一覧やラベル名一覧など表示するコマンド欲しいか？

流石にメモリダンプの表示コマンドは要らんだろ・・・と思うがどうだろうか・・・？
basではなくcasなら欲しいか？



ファイル名のコードとメモリ上の位置関係の対応を保持
   hoge.bas   #1000～#1834
   FOO.cas    #1835～#2001
ステップ実行時にプログラムカウンタの位置の対応フィル名を表示するようにする
ファイル数少ないだろうから、ファイル名特定にバイナリサーチするほどではないかも

ファイル名とラベルとメモリ位置の対応マップを保持
   hoge.bas    J1  #1105
               I2  #1201
               SL1 #1205
               SB1 #1206
   FOO.cas     J3  #1901
               I2  #1950

ファイル名とラベルを指定するとラベルのメモリアドレスを取得できるようにする
メモリアドレスと長さを指定すると、その範囲の値を取得できる   


ファイルがbasの場合
compilerの変数の型ごとのラベル保持情報を流用して
　　　変数の値の問い合わせを可能にする

   hoge.bas (intVar2, I2)  -> adr #1201 -> value (#1201)
            (str1, SL1,SB1) -> adr #1205 -> value (#1205)
                               adr #1206 -> values (#1206～#1305)

